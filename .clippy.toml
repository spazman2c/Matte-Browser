# Matte Browser - Clippy Configuration
# This file configures clippy for pedantic linting

# Enable all lints by default
all = true

# Disable specific lints that are too noisy or not applicable
# Documentation
doc_markdown = "allow"
missing_docs = "allow"  # We'll enable this later when docs are more complete

# Complexity
cognitive_complexity = "allow"  # Allow for now, can be tuned later
too_many_arguments = "allow"    # Browser APIs often need many args
too_many_lines = "allow"        # Allow for complex implementations

# Performance
# These are good to have but can be noisy during development
cast_precision_loss = "warn"
cast_sign_loss = "warn"
cast_possible_truncation = "warn"
cast_possible_wrap = "warn"

# Style
# Allow some style variations during development
module_name_repetitions = "allow"
similar_names = "allow"
many_single_char_names = "allow"

# Correctness
# These are important for correctness
unwrap_used = "warn"
expect_used = "warn"
panic = "warn"
todo = "warn"
unimplemented = "warn"

# Suspicious code
# These help catch potential bugs
assign_op_pattern = "warn"
erasing_op = "warn"
eval_order_dependence = "warn"
mixed_read_write_in_expression = "warn"

# Complexity
# These help maintain code quality
cyclomatic_complexity = "warn"
too_many_arguments = "warn"
too_many_lines = "warn"
cognitive_complexity = "warn"

# Style
# These help maintain consistent style
collapsible_if = "warn"
collapsible_else_if = "warn"
comparison_chain = "warn"
explicit_counter_loop = "warn"
explicit_iter_loop = "warn"
explicit_into_iter_loop = "warn"
for_kv_map = "warn"
manual_flatten = "warn"
manual_map = "warn"
manual_memcpy = "warn"
manual_ok_or = "warn"
manual_string_new = "warn"
match_as_ref = "warn"
match_bool = "warn"
match_like_matches_macro = "warn"
match_ref_pats = "warn"
match_same_arms = "warn"
match_wild_err_arm = "warn"
mem_replace_with_default = "warn"
modulo_arithmetic = "warn"
needless_borrow = "warn"
needless_continue = "warn"
needless_for_each = "warn"
needless_pass_by_value = "warn"
needless_range_loop = "warn"
needless_return = "warn"
needless_splitn = "warn"
option_if_let_else = "warn"
or_fun_call = "warn"
ptr_as_ptr = "warn"
redundant_closure = "warn"
redundant_closure_for_method_calls = "warn"
redundant_else = "warn"
redundant_pattern_matching = "warn"
redundant_slicing = "warn"
search_is_some = "warn"
single_char_pattern = "warn"
string_lit_as_bytes = "warn"
unnecessary_lazy_evaluations = "warn"
unnecessary_operation = "warn"
unused_self = "warn"
use_self = "warn"

# Performance
# These help with performance
box_collection = "warn"
clone_on_copy = "warn"
map_clone = "warn"
redundant_clone = "warn"
slow_vector_initialization = "warn"

# Correctness
# These help catch bugs
as_conversions = "warn"
cast_lossless = "warn"
char_lit_as_u8 = "warn"
checked_conversions = "warn"
float_cmp = "warn"
float_cmp_const = "warn"
identity_op = "warn"
ineffective_bit_mask = "warn"
int_plus_one = "warn"
invalid_regex = "warn"
items_after_statements = "warn"
let_underscore_drop = "warn"
let_underscore_lock = "warn"
let_underscore_must_use = "warn"
main_recursion = "warn"
manual_instant_elapsed = "warn"
manual_non_exhaustive = "warn"
manual_ok_or = "warn"
manual_string_new = "warn"
mem_forget = "warn"
missing_const_for_fn = "warn"
missing_docs_in_private_items = "allow"
missing_inline_in_public_items = "allow"
missing_panics_doc = "allow"
multiple_inherent_impl = "warn"
mut_mut = "warn"
mutex_atomic = "warn"
needless_question_mark = "warn"
non_ascii_literal = "warn"
ok_expect = "warn"
option_expect_used = "warn"
panic_in_result_fn = "warn"
partial_pub_fields = "warn"
path_buf_push_overwrite = "warn"
print_stdout = "warn"
pub_enum_variant_names = "warn"
pub_use = "warn"
redundant_pub_crate = "warn"
ref_binding_to_reference = "warn"
ref_option_ref = "warn"
result_expect_used = "warn"
result_map_or_into_option = "warn"
result_map_unit_fn = "warn"
result_unit_err = "warn"
same_functions_in_if_blocks = "warn"
self_named_module_files = "warn"
serde_api_misuse = "warn"
shadow_reuse = "warn"
shadow_same = "warn"
shadow_unrelated = "warn"
should_assert_eq = "warn"
should_implement_trait = "warn"
single_component_path_imports = "warn"
string_add = "warn"
string_add_assign = "warn"
string_lit_chars_any = "warn"
string_to_string = "warn"
todo = "warn"
toplevel_ref_arg = "warn"
transmute_int_to_char = "warn"
transmute_int_to_float = "warn"
transmute_ptr_to_ptr = "warn"
transmute_ptr_to_ref = "warn"
transmute_ref_to_ref = "warn"
transmute_undefined_repr = "warn"
transmutes_expressible_as_ptr_casts = "warn"
transmuting_null = "warn"
trivial_regex = "warn"
type_repetition_in_bounds = "warn"
unimplemented = "warn"
unnecessary_operation = "warn"
unnecessary_self_imports = "warn"
unnecessary_struct_initialization = "warn"
unneeded_field_pattern = "warn"
unreachable = "warn"
unreachable_pub = "warn"
unsafe_derive_deserialize = "warn"
unsafe_removed_from_name = "warn"
unseparated_literal_suffix = "warn"
unused_async = "warn"
unused_assignments = "warn"
unused_attributes = "warn"
unused_braces = "warn"
unused_comparisons = "warn"
unused_doc_comments = "warn"
unused_enumerate_index = "warn"
unused_features = "warn"
unused_imports = "warn"
unused_labels = "warn"
unused_lifetimes = "warn"
unused_macros = "warn"
unused_mut = "warn"
unused_parens = "warn"
unused_qualifications = "warn"
unused_self = "warn"
unused_tuple_struct_fields = "warn"
unused_variables = "warn"
unused_write = "warn"
useless_attribute = "warn"
useless_conversion = "warn"
useless_format = "warn"
useless_let_if_seq = "warn"
useless_transmute = "warn"
verbose_bit_mask = "warn"
verbose_file_reads = "warn"
while_immutable_condition = "warn"
while_let_loop = "warn"
write_literal = "warn"
write_with_newline = "warn"
zero_divided_by_zero = "warn"
zero_prefixed_literal = "warn"
zero_sized_map_values = "warn"
zero_width_space = "warn"
